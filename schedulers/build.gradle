plugins {
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.9.22"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}


application {
    mainClass = 'schedulers.SchedulerMain'
}

// The runtime environment this JAR will be deployed to doesn't know what this model depends on.
// So the generated JAR must include its dependencies. (Except `merlin-sdk`, which is marked `compileTimeApi` by
// `merlin-framework`, so that the runtime system and model JAR can agree on the same interfaces.)
jar {
//    from {
//        configurations.runtimeClasspath.filter{ it.exists() }.collect{ it.isDirectory() ? it : zipTree(it) }
//    } {
//        exclude 'META-INF/LICENSE.txt', 'META-INF/LICENSE', 'META-INF/NOTICE.txt', 'META-INF/NOTICE', 'META-INF/versions/11/module-info.class'
//    }
}

repositories {
    flatDir { dirs "$rootDir/third-party" }
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/nasa-ammos/aerie"
        credentials {
            username = System.getenv('GITHUB_USER')
            password = System.getenv('GITHUB_TOKEN')
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

dependencies {
    implementation 'gov.nasa.jpl.aerie:contrib:2.7.0'
    implementation 'gov.nasa.jpl.aerie:merlin-driver:2.7.0'
    implementation 'gov.nasa.jpl.aerie:parsing-utilities:2.7.0'

    testImplementation 'gov.nasa.jpl.aerie:merlin-framework-junit:+'
    testImplementation 'org.junit.jupiter:junit-jupiter:+'
    implementation files("../third-party/timeline.jar")
    implementation project(":missionmodel")
    implementation 'org.postgresql:postgresql:42.6.1' // For PGInterval parsing
}
